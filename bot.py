import os
import telebot
import requests
from telebot import types

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

if not TOKEN or not OPENROUTER_API_KEY:
    raise ValueError("‚ùå –ü—Ä–æ–≤–µ—Ä—å TELEGRAM_TOKEN –∏ OPENROUTER_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

bot = telebot.TeleBot(TOKEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üéì –û —à–∫–æ–ª–µ", "üí∞ –¶–µ–Ω—ã")
    markup.row("üìù –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "ü•á –£—Ä–æ–≤–Ω–∏ —É—á–µ–Ω–∏–∫–æ–≤")
    markup.row("üéØ –¶–µ–ª–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    return markup

# –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ OpenRouter
def ask_openrouter(prompt):
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://yourdomain.com",  # –£–∫–∞–∂–∏ —Å–≤–æ–π –¥–æ–º–µ–Ω –∏–ª–∏ telegram-username
        "X-Title": "SoundMusicBot"
    }

    data = {
        "model": "mistralai/mistral-7b-instruct:free",
        "messages": [
            {"role": "system", "content": "–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —à–∫–æ–ª—ã –≥–∏—Ç–∞—Ä—ã SoundMusic –∏–∑ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞."},
            {"role": "user", "content": prompt}
        ]
    }

    response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=data)

    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"]
    else:
        print("–û—à–∏–±–∫–∞ OpenRouter:", response.text)
        return "‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ."

# –û—Ç–≤–µ—Ç –Ω–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø ‚Äî –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —ç–∫—Å–ø—Ä–µ—Å—Å-—à–∫–æ–ª—ã –≥–∏—Ç–∞—Ä—ã SOUNDMUSIC.\n\n–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç:",
        reply_markup=main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.strip()

    if text == "üéì –û —à–∫–æ–ª–µ":
        bot.send_message(message.chat.id, "üéì –ú—ã ‚Äî —ç–∫—Å–ø—Ä–µ—Å—Å-—à–∫–æ–ª–∞ –≥–∏—Ç–∞—Ä—ã soundmusic... https://soundmusic54.ru/#menu")
    elif text == "üí∞ –¶–µ–Ω—ã":
        bot.send_message(message.chat.id, "üí∞ –¶–µ–Ω—ã —Ç—É—Ç:\nhttps://soundmusic54.ru/#price")
    elif text == "üìù –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è":
        bot.send_message(message.chat.id, "üìù –û—Å—Ç–∞–≤—å –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ:\nhttps://soundmusic54.ru/#sign")
    elif text == "ü•á –£—Ä–æ–≤–Ω–∏ —É—á–µ–Ω–∏–∫–æ–≤":
        bot.send_message(message.chat.id, "ü•á –£ –Ω–∞—Å —É—á–∞—Ç—Å—è –∏ –Ω–æ–≤–∏—á–∫–∏, –∏ –ø—Ä–æ—Ñ–∏: https://soundmusic54.ru/top")
    elif text == "üéØ –¶–µ–ª–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç":
        bot.send_message(message.chat.id, "üéØ –ú—ã –ø–æ–º–æ–∂–µ–º –¥–æ—Å—Ç–∏—á—å —Ü–µ–ª–∏: https://soundmusic54.ru/production")
    else:
        bot.send_chat_action(message.chat.id, 'typing')
        try:
            reply = ask_openrouter(text)
            bot.send_message(message.chat.id, reply)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ GPT:", e)
            bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

print("–ë–æ—Ç —Å OpenRouter –∑–∞–ø—É—â–µ–Ω!")
bot.polling()
