import os
import telebot
from telebot import types
import requests
from dotenv import load_dotenv
from telebot.apihelper import ApiTelegramException

load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

if not TOKEN or not OPENROUTER_API_KEY:
    raise ValueError("‚ùå TELEGRAM_TOKEN –∏–ª–∏ OPENROUTER_API_KEY –Ω–µ –∑–∞–¥–∞–Ω—ã!")

bot = telebot.TeleBot(TOKEN)

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üéì –û —à–∫–æ–ª–µ", "üí∞ –¶–µ–Ω—ã")
    markup.row("üìù –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "ü•á –£—Ä–æ–≤–Ω–∏ —É—á–µ–Ω–∏–∫–æ–≤")
    markup.row("üéØ –¶–µ–ª–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    return markup

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø ‚Äî –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —ç–∫—Å–ø—Ä–µ—Å—Å-—à–∫–æ–ª—ã –≥–∏—Ç–∞—Ä—ã SOUNDMUSIC.\n\n–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç:",
        reply_markup=main_menu()
    )

def ask_gpt(question: str) -> str:
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json"
    }
    payload = {
        "model": "tngtech/deepseek-r1t2-chimera:free",
        "messages": [
            {"role": "system",
             "content": "–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, —á–µ—Å—Ç–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ SoundMusic. –û—Ç–≤–µ—á–∞–π –ø–æ–Ω—è—Ç–Ω–æ –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ."},
            {"role": "user", "content": question}
        ],
        "max_tokens": 150,
        "temperature": 0.7
    }

    resp = requests.post(
        "https://openrouter.ai/api/v1/chat/completions",
        headers=headers,
        json=payload
    )

    if resp.ok:
        return resp.json()["choices"][0]["message"]["content"]
    else:
        print("–û—à–∏–±–∫–∞ OpenRouter:", resp.status_code, resp.text)
        return "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

@bot.message_handler(func=lambda m: True)
def handle_message(message):
    text = message.text.strip()
    if text in ["üéì –û —à–∫–æ–ª–µ", "üí∞ –¶–µ–Ω—ã", "üìù –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è", "ü•á –£—Ä–æ–≤–Ω–∏ —É—á–µ–Ω–∏–∫–æ–≤", "üéØ –¶–µ–ª–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç"]:
        responses = {
            "üéì –û —à–∫–æ–ª–µ": "üéì –≠–∫—Å–ø—Ä–µ—Å—Å-—à–∫–æ–ª–∞ SoundMusic ‚Äî https://soundmusic54.ru/#menu",
            "üí∞ –¶–µ–Ω—ã": "üí∞ –¶–µ–Ω—ã: https://soundmusic54.ru/#price",
            "üìù –ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è": "üìù –ó–∞—è–≤–∫–∞: https://soundmusic54.ru/#sign –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å —Ç—É—Ç",
            "ü•á –£—Ä–æ–≤–Ω–∏ —É—á–µ–Ω–∏–∫–æ–≤": "ü•á –ú—ã –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ–º—Å—è –ø–æ–¥ —Ç–≤–æ–π —É—Ä–æ–≤–µ–Ω—å ‚Äî https://soundmusic54.ru/top",
            "üéØ –¶–µ–ª–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç": "üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏: https://soundmusic54.ru/production"
        }
        try:
            bot.send_message(message.chat.id, responses[text])
        except ApiTelegramException as e:
            if e.result_json.get('description') == 'Forbidden: bot was blocked by the user':
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
            else:
                raise e
    else:
        bot.send_chat_action(message.chat.id, 'typing')
        reply = ask_gpt(text)
        try:
            bot.send_message(message.chat.id, reply, reply_markup=main_menu())
        except ApiTelegramException as e:
            if e.result_json.get('description') == 'Forbidden: bot was blocked by the user':
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
            else:
                raise e

print("üöÄ –ë–æ—Ç —Å DeepSeek –∑–∞–ø—É—â–µ–Ω!")
bot.infinity_polling()
