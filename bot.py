import os
import re
import time
import logging
import threading
import requests
import telebot
from flask import Flask
from functools import wraps
from telebot import formatting
from telebot.apihelper import ApiTelegramException
from bs4 import BeautifulSoup
from datetime import datetime
from urllib.parse import urljoin

# ================== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ì–ò–¢–ê–†–ù–û–ô –®–ö–û–õ–´ ================== #
SCHOOL_SITE = "https://soundmusic54.ru"
SCHOOL_PAGES = {
    "main": SCHOOL_SITE,
    "production": urljoin(SCHOOL_SITE, "production"),
    "fingerstyle": urljoin(SCHOOL_SITE, "fingerstyle"),
    "electricguitar": urljoin(SCHOOL_SITE, "electricguitar"),
    "shop": urljoin(SCHOOL_SITE, "shop"),
    "top": urljoin(SCHOOL_SITE, "top"),
    "way": urljoin(SCHOOL_SITE, "way"),
    "plan": urljoin(SCHOOL_SITE, "plan"),
    "faq": urljoin(SCHOOL_SITE, "faq")
}

# ================== –ù–ê–°–¢–†–û–ô–ö–ê –õ–û–ì–ì–ò–†–û–í–ê–ù–ò–Ø ================== #
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler('guitar_bot.log', encoding='utf-8')
    ]
)
logger = logging.getLogger('GuitarSchoolBot')
logger.setLevel(logging.DEBUG if os.getenv('DEBUG') else logging.INFO)

# ================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ================== #
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not BOT_TOKEN:
    logger.critical("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–µ–Ω!")
    raise EnvironmentError("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")

bot = telebot.TeleBot(BOT_TOKEN, threaded=True, num_threads=4)
app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–Ω–∞–Ω–∏–π –æ —à–∫–æ–ª–µ
school_knowledge = {}
lock = threading.Lock()

# ================== –°–ò–°–¢–ï–ú–ê –ó–ù–ê–ù–ò–ô –û –®–ö–û–õ–ï ================== #
def load_school_knowledge():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –ø–∞—Ä—Å–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–æ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü —Å–∞–π—Ç–∞ —à–∫–æ–ª—ã"""
    logger.info("üé∏ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–Ω–∞–Ω–∏–π –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ...")
    knowledge = {}
    
    for page_name, url in SCHOOL_PAGES.items():
        try:
            response = requests.get(url, timeout=15)
            response.raise_for_status()
            
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –£–¥–∞–ª—è–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            for element in soup(['script', 'style', 'footer', 'header', 'nav']):
                element.decompose()
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
            content = soup.find('main') or soup.find('article') or soup.find('div', class_='content')
            
            if not content:
                content = soup.body
            
            # –û—á–∏—Å—Ç–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
            text = content.get_text(separator='\n', strip=True)
            text = re.sub(r'\n{3,}', '\n\n', text)
            
            knowledge[page_name] = {
                'url': url,
                'title': soup.title.string if soup.title else page_name,
                'content': text[:15000]  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–±—ä–µ–º–∞
            }
            
            logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {page_name} ({len(text)} —Å–∏–º–≤–æ–ª–æ–≤)")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {url}: {str(e)}")
            knowledge[page_name] = {
                'url': url,
                'title': page_name,
                'content': f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü–æ—Å–µ—Ç–∏—Ç–µ: {url}"
            }
    
    return knowledge

def get_relevant_knowledge(query: str) -> str:
    """–ù–∞—Ö–æ–¥–∏—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à–∫–æ–ª–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É"""
    query = query.lower()
    relevant_info = []
    
    # –ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    for name, data in school_knowledge.items():
        content = data['content'].lower()
        
        # –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        if query in content:
            # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–∫—Ä—É–≥ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
            start_idx = max(0, content.find(query) - 100)
            end_idx = min(len(content), content.find(query) + len(query) + 300)
            snippet = data['content'][start_idx:end_idx]
            
            relevant_info.append(
                f"üìö –ò–∑ —Ä–∞–∑–¥–µ–ª–∞ '{data['title']}':\n{snippet}...\n"
                f"üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ: {data['url']}"
            )
    
    # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if relevant_info:
        return "\n\n".join(relevant_info[:3])  # –ù–µ –±–æ–ª–µ–µ 3 —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤
    
    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    return (
        "üé∏ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ SoundMusic54:\n"
        f"- –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: {SCHOOL_PAGES['main']}\n"
        f"- –ü—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è: {SCHOOL_PAGES['production']}\n"
        f"- FAQ: {SCHOOL_PAGES['faq']}\n\n"
        "–ó–∞–¥–∞–π—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å –æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö –æ–±—É—á–µ–Ω–∏—è, "
        "–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö –∏–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–Ω—è—Ç–∏–π."
    )

def refresh_knowledge_periodically():
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞–Ω–∏—è –æ —à–∫–æ–ª–µ"""
    while True:
        time.sleep(24 * 3600)  # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏
        try:
            with lock:
                global school_knowledge
                school_knowledge = load_school_knowledge()
            logger.info("üîÑ –ó–Ω–∞–Ω–∏—è –æ —à–∫–æ–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π: {str(e)}")

# ================== –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –° DEEPSEEK ================== #
def ask_deepseek(question: str) -> str:
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç —É DeepSeek —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ"""
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à–∫–æ–ª–µ
    school_info = get_relevant_knowledge(question)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –æ —à–∫–æ–ª–µ
    system_prompt = (
        "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª—ã SoundMusic54. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, "
        "–∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —à–∫–æ–ª–µ. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –æ —à–∫–æ–ª–µ –∏–ª–∏ –≥–∏—Ç–∞—Ä–µ, "
        "–≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏ –æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏. –í–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à–∫–æ–ª–µ:\n\n"
        f"{school_info}\n\n"
        "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º, –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º."
    )
    
    payload = {
        "model": "deepseek-chat",
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": question}
        ],
        "temperature": 0.7,
        "max_tokens": 1200
    }
    
    try:
        response = requests.post(
            "https://api.deepseek.com/v1/chat/completions",
            json=payload,
            headers={"Authorization": f"Bearer {os.getenv('DEEPSEEK_API_KEY')}"},
            timeout=25
        )
        response.raise_for_status()
        return response.json()["choices"][0]["message"]["content"]
    
    except Exception as e:
        logger.error(f"DeepSeek error: {str(e)}")
        return (
            "üé∏ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ SoundMusic54.\n\n"
            f"–ü–æ–∫–∞ —è –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å, –Ω–æ –≤–æ—Ç –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n"
            f"{school_info}"
        )

# ================== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò TELEGRAM ================== #
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ"""
    welcome_msg = (
        "üéµ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SoundMusic54!*\n\n"
        "–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª—ã. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\n\n"
        "üîπ –£–∑–Ω–∞–π—Ç–µ –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –æ–±—É—á–µ–Ω–∏—è\n"
        "üîπ –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –≤—ã–±–æ—Ä—É –∫—É—Ä—Å–∞\n"
        "üîπ –£–∑–Ω–∞–π—Ç–µ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö\n"
        "üîπ –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏\n\n"
        "–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ —à–∫–æ–ª–µ, –≥–∏—Ç–∞—Ä–µ –∏–ª–∏ –æ–±—É—á–µ–Ω–∏–∏!\n\n"
        "–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç: [soundmusic54.ru](https://soundmusic54.ru)"
    )
    
    try:
        bot.send_message(
            message.chat.id,
            welcome_msg,
            parse_mode="Markdown",
            disable_web_page_preview=False
        )
    except ApiTelegramException:
        bot.send_message(message.chat.id, welcome_msg)

@bot.message_handler(commands=['programs'])
def show_programs(message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è"""
    try:
        programs_info = (
            "üé∏ *–ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è:*\n\n"
            f"‚Ä¢ [–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∞—è –≥–∏—Ç–∞—Ä–∞]({SCHOOL_PAGES['production']})\n"
            f"‚Ä¢ [–§–∏–Ω–≥–µ—Ä—Å—Ç–∞–π–ª]({SCHOOL_PAGES['fingerstyle']})\n"
            f"‚Ä¢ [–≠–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä–∞]({SCHOOL_PAGES['electricguitar']})\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!"
        )
        
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–í—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã", url=SCHOOL_PAGES['production']))
        markup.add(types.InlineKeyboardButton("FAQ", url=SCHOOL_PAGES['faq']))
        
        bot.send_message(
            message.chat.id,
            programs_info,
            parse_mode="Markdown",
            reply_markup=markup
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –ø—Ä–æ–≥—Ä–∞–º–º: {str(e)}")
        bot.send_message(
            message.chat.id,
            "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ —Å–∞–π—Ç–µ: " + SCHOOL_PAGES['production']
        )

@bot.message_handler(func=lambda m: True)
def handle_guitar_question(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ"""
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è "–ø–µ—á–∞—Ç–∞–µ—Ç"
        bot.send_chat_action(message.chat.id, 'typing')
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å —É—á–µ—Ç–æ–º –∑–Ω–∞–Ω–∏–π –æ —à–∫–æ–ª–µ
        response = ask_deepseek(message.text)
        
        # –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
        formatted_response = format_guitar_response(response)
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
        send_safe_message(message.chat.id, formatted_response, reply_to=message.message_id)
        
    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞")
        bot.send_message(
            message.chat.id,
            "üé∏ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –≥–∏—Ç–∞—Ä–Ω–æ–π —à–∫–æ–ª–µ SoundMusic54.\n"
            "–ü–æ–∫–∞ –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ:\n"
            f"- –ü–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç: {SCHOOL_PAGES['main']}\n"
            f"- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å FAQ: {SCHOOL_PAGES['faq']}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–Ω–∞—á–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é!"
        )

# ================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ================== #
def format_guitar_response(text: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –≥–∏—Ç–∞—Ä–Ω—É—é —Ç–µ–º–∞—Ç–∏–∫—É"""
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–∏—Ç–∞—Ä–Ω—É—é —Ç–µ–º–∞—Ç–∏–∫—É –≤ –æ—Ç–≤–µ—Ç
    guitar_phrases = [
        "üé∏ –í–∞—à –∑–≤—É–∫ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å!",
        "üé∂ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –º—É–∑—ã–∫–∏!",
        "üî• –ó–∞–∂–∏–≥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã!",
        "üéµ SoundMusic54 - —Ç–≤–æ–π –ø—É—Ç—å –∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤—É!"
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –º—É–∑—ã–∫–∞–ª—å–Ω—É—é —Ñ—Ä–∞–∑—É
    import random
    if random.random() > 0.7:  # 30% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
        text += f"\n\n{random.choice(guitar_phrases)}"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç
    if SCHOOL_SITE not in text:
        text += f"\n\nüîó –ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {SCHOOL_PAGES['main']}"
    
    return text

def send_safe_message(chat_id, text, reply_to=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if len(text) > 3000:
            parts = [text[i:i+3000] for i in range(0, len(text), 3000)]
            for part in parts:
                bot.send_message(chat_id, part, reply_to_message_id=reply_to)
                time.sleep(0.3)
                reply_to = None  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç–æ–º
        else:
            bot.send_message(chat_id, text, reply_to_message_id=reply_to)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}")
        # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        try:
            clean_text = re.sub(r'[*_`[]]', '', text)[:4000]
            bot.send_message(chat_id, clean_text, reply_to_message_id=reply_to)
        except:
            bot.send_message(
                chat_id,
                "üé∏ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω! –ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ: " + SCHOOL_PAGES['main'],
                reply_to_message_id=reply_to
            )

# ================== –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ ================== #
def initialize_bot():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∑–Ω–∞–Ω–∏–π –æ —à–∫–æ–ª–µ"""
    logger.info("üé∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–∏—Ç–∞—Ä–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∑–Ω–∞–Ω–∏–π –æ —à–∫–æ–ª–µ
    global school_knowledge
    school_knowledge = load_school_knowledge()
    
    # –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞–Ω–∏–π
    threading.Thread(target=refresh_knowledge_periodically, daemon=True).start()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

@app.route('/health')
def health_check():
    return {
        "status": "OK",
        "school": "SoundMusic54",
        "pages_loaded": len(school_knowledge),
        "last_update": datetime.utcnow().isoformat()
    }, 200

if __name__ == '__main__':
    initialize_bot()
    
    # –ó–∞–ø—É—Å–∫ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    flask_thread = threading.Thread(
        target=lambda: app.run(host='0.0.0.0', port=8080, debug=False, use_reloader=False),
        daemon=True
    )
    flask_thread.start()
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    while True:
        try:
            logger.info("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
            bot.infinity_polling(timeout=90, long_polling_timeout=40)
        except Exception as e:
            logger.critical(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {str(e)}")
            logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...")
            time.sleep(15)
