import os
import telebot
import requests
from telebot.apihelper import ApiTelegramException
from dotenv import load_dotenv

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

if not TELEGRAM_BOT_TOKEN:
    raise Exception("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!")

if not OPENROUTER_API_KEY:
    raise Exception("‚ùå OPENROUTER_API_KEY –Ω–µ –∑–∞–¥–∞–Ω!")

print("‚úÖ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)


def ask_gpt(question: str) -> str:
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        # "HTTP-Referer": "https://soundmusic54.ru",
        # "X-Title": "SoundMusic Bot"
    }

    payload = {
        "model": "tngtech/deepseek-r1t2-chimera:free",
        "messages": [
            {
                "role": "system",
                "content": "–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, —á–µ—Å—Ç–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —à–∫–æ–ª—ã SoundMusic. –û—Ç–≤–µ—á–∞–π –ø–æ–Ω—è—Ç–Ω–æ, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø–æ–ª–µ–∑–Ω–æ.",
            },
            {
                "role": "user",
                "content": question
            }
        ],
        "max_tokens": 300,
        "temperature": 0.7
    }

    try:
        response = requests.post(
            url="https://openrouter.ai/api/v1/chat/completions",
            headers=headers,
            json=payload
        )

        if response.ok:
            data = response.json()
            return data.get("choices", [{}])[0].get("message", {}).get("content", "‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ OpenRouter:", response.status_code, response.text)
            return "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

    except Exception as e:
        print("‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenRouter:", str(e))
        return "‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.strip()
    if not text:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å.")
        return

    try:
        answer = ask_gpt(text)
        bot.send_message(message.chat.id, answer)
    except ApiTelegramException as e:
        if e.result_json.get('description') == 'Forbidden: bot was blocked by the user':
            print(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {e}")
            raise e
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç —Å DeepSeek –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
