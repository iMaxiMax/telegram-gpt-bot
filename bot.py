import os
import sys
import requests
from bs4 import BeautifulSoup
import telebot
import re

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")
if not TELEGRAM_BOT_TOKEN or not OPENROUTER_API_KEY:
    raise RuntimeError("‚ùå –ù–µ –∑–∞–¥–∞–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ TELEGRAM_BOT_TOKEN –∏–ª–∏ OPENROUTER_API_KEY")

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

HEADERS = {"User-Agent": "Mozilla/5.0"}
BASE_URL = "https://soundmusic54.ru"
PATHS = ["", "production", "fingerstyle", "electricguitar", "shop", "top", "way", "plan", "faq"]
site_contents = {}

def fetch_page(url):
    try:
        r = requests.get(url, headers=HEADERS, timeout=10)
        r.raise_for_status()
        return r.text
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {url}: {e}")
        return None

def load_site():
    print("‚öôÔ∏è –ó–∞–≥—Ä—É–∂–∞—é —Å–∞–π—Ç...")
    for p in PATHS:
        u = BASE_URL + ("/" + p if p else "")
        html = fetch_page(u)
        text = BeautifulSoup(html, "html.parser").get_text("\n", strip=True) if html else ""
        site_contents[p or "base"] = text
    print("‚úÖ –°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω")

def ask_deepseek(q):
    url = "https://openrouter.ai/api/v1/chat/completions"
    sec = "\n\n".join(f"–†–∞–∑–¥–µ–ª '{k}': {v[:800]}" for k, v in site_contents.items() if k in ("base","faq","plan","way"))
    sys_p = ("–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ SoundMusic, –æ–ø–∏—Ä–∞–π—Å—è –Ω–∞ —Å–∞–π—Ç. "
             "–ï—Å–ª–∏ –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ ‚Äî —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º.\n" + sec)
    payload = {"model": "tngtech/deepseek-r1t2-chimera:free",
               "messages":[{"role":"system","content":sys_p},{"role":"user","content":q}],
               "max_tokens":800, "temperature":0.7}
    for model in [
        "tngtech/deepseek-r1t2-chimera:free",
        "togethercomputer/stripedhyena-hessian:free",
        "mistralai/mistral-7b-instruct:free"
    ]:
        payload["model"] = model
        try:
            r = requests.post(url, headers={"Authorization":f"Bearer {OPENROUTER_API_KEY}","Content-Type":"application/json"}, json=payload, timeout=20)
            if r.status_code == 200:
                d = r.json()
                txt = d.get("choices",[{}])[0].get("message",{}).get("content","").strip()
                return txt or "‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç."
            if r.status_code in (400,429):
                print(f"‚ùå –ú–æ–¥–µ–ª—å {model} –≤–µ—Ä–Ω—É–ª–∞ {r.status_code}, –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é")
                continue
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ {model}: {e}")
    return "‚ö†Ô∏è –í—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

def fmt_md(text):
    t = text.replace("__","*").replace("**","*")
    return re.sub(r'<br\s*/?>','\n',t,flags=re.I)

@bot.message_handler(commands=['start','help'])
def cmd_start(m):
    bot.send_message(m.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ SoundMusic. –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã!")

@bot.message_handler(func=lambda m: True)
def msg(m):
    q = m.text.strip()
    if not q:
        bot.send_message(m.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å.")
        return
    bot.send_chat_action(m.chat.id, 'typing')
    a = ask_deepseek(q)
    a = fmt_md(a)
    for i in range(0, len(a), 4000):
        bot.send_message(m.chat.id, a[i:i+4000], parse_mode="Markdown")

def check_conflict():
    try:
        bot.get_updates(offset=-1, timeout=1)
    except telebot.apihelper.ApiTelegramException as e:
        if "409" in str(e):
            print("‚ùó –£–∂–µ –∑–∞–ø—É—â–µ–Ω –¥—Ä—É–≥–æ–π –±–æ—Ç ‚Üí 409 Conflict. –í—ã—Ö–æ–¥.")
            sys.exit(0)
        else:
            raise

if __name__ == "__main__":
    check_conflict()
    load_site()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.infinity_polling()
