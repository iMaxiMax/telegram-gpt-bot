import os
import telebot
import requests
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from telebot.apihelper import ApiTelegramException
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

bot = telebot.TeleBot(BOT_TOKEN)

def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row(KeyboardButton("üìö –ö—É—Ä—Å—ã"), KeyboardButton("üé∏ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏"))
    markup.row(KeyboardButton("üìç –ê–¥—Ä–µ—Å"), KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"))
    return markup

def ask_gpt(question: str) -> str:
    if not OPENROUTER_API_KEY:
        return "‚ö†Ô∏è API-–∫–ª—é—á OpenRouter –Ω–µ –Ω–∞–π–¥–µ–Ω."

    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
    }

    payload = {
        "model": "tngtech/deepseek-r1t2-chimera:free",
        "messages": [
            {"role": "system", "content": "–¢—ã ‚Äî —Ç—ë–ø–ª—ã–π, —á–µ—Å—Ç–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ SoundMusic. –û—Ç–≤–µ—á–∞–π –ø–æ–Ω—è—Ç–Ω–æ –∏ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ."},
            {"role": "user", "content": question}
        ],
        "max_tokens": 200,
        "temperature": 0.7
    }

    try:
        response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=payload)

        if response.ok:
            data = response.json()
            return data.get("choices", [{}])[0].get("message", {}).get("content", "‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ OpenRouter:", response.status_code, response.text)
            return "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

    except Exception as e:
        print("‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenRouter:", str(e))
        return "‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ SoundMusic. –ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é:", reply_markup=main_menu())

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.strip()
    reply = ask_gpt(text)

    try:
        if reply.strip():
            bot.send_message(message.chat.id, reply, reply_markup=main_menu())
        else:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –û—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π.", reply_markup=main_menu())
    except ApiTelegramException as e:
        if "bot was blocked by the user" in str(e):
            print(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
        else:
            raise e

if __name__ == '__main__':
    print("üöÄ –ë–æ—Ç —Å DeepSeek –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
